class Fields:

    class IntegerField:
        def __init__(self, value=0):
            self.value = value

        def get_value(self):
            return self.value

        def set_value(self, value):
            if isinstance(value, int):
                self.value = value
            else:
                raise Exception('Invalid int type')

    class BooleanField:
        def __init__(self, value=False):
            self.value = value

        def get_value(self):
            return self.value

        def set_value(self, value):
            if isinstance(value, bool):
                self.value = value
            else:
                raise Exception('Invalid boolean type')

    class FloatField:
        def __init__(self, value=0.0):
            self.value = value

        def get_value(self):
            return self.value

        def set_value(self, value):
            if isinstance(value, float):
                self.value = value
            else:
                raise Exception('Invalid float type')

    class CharField:
        def __init__(self, value='a'):
            self.value = value

        def get_value(self):
            return self.value

        def set_value(self, value):
            if isinstance(value, str):
                self.value = value
            else: 
                raise Exception('Invalid char type')

    class AutoGeneratedPrimaryField:
        def __init__(self, value=1):
            self.value = value

        def get_value(self):
            return self.value

        def set_value(self, value):
            if isinstance(value, int):
                self.value = value
            else:
                raise Exception('Invalid int type')
